"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3256],{82598:e=>{e.exports=JSON.parse('{"functions":[{"name":"CurrentTarget","desc":"Gets the current value of the eased object\'s target observable.","params":[],"returns":[],"function_type":"method","source":{"line":176,"path":"src/Observables/EasedObject.luau"}}],"properties":[],"types":[],"name":"Eased","desc":"#### Inherits [Observable]\\n\\nObservable object which tweens towards another observable\'s current value\\nevery time that value changes.\\n\\nUseful for tween animations where the input state changes infrequently, such\\nas menu transitions.\\n\\n## Constructor\\n\\n---\\n\\n### Dex.Eased\\n```ts\\nDex.Eased<T>(\\n    target: Observable<T>\\n    info: TweenInfo\\n) -> Observable<T>\\n```\\n\\nCreates an Observable that eases in realtime every time the input Observable\\nchanges its value, based on the TweenInfo provided.\\n\\n:::info\\nEased must currently be ***Subscribed*** or ***Mounted*** to exhibit\\nexpected behavior. This is a requirement for all realtime-simulated\\nobservables, which enables safe garbage collection when writing Dex\\ncomponents.\\n:::","tags":["Observable"],"source":{"line":59,"path":"src/Observables/Eased.luau"}}')}}]);